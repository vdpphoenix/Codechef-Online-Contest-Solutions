Link of Question:
https://www.codechef.com/APRIL17/problems/RNDGRID
Code in C++:
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pr;
vector <pr> z;
vector <ll> val;
bool visit[1000][1000];
 
bool check(int i,int j,char **ch,int n)
{
  if(i<0 || i>(n-1))
     return 0;
  if(j<0 || j>(n-1))
    return 0;
  if(ch[i][j]=='.')
    return 1;
  return 0;
}
 
void rec(char **ch,int n,string s,int l)
{
  int i,j,h,c,p,q;
  bool w;
  pr gf;
  for(i=0;i<z.size();i++)
     {
       c=0;
       gf=z[i];
       p=gf.first;
       q=gf.second;
         if(visit[p][q]==1)
            continue;
        visit[p][q]=1;
         for(j=0;j<l;j++)
             {
               if(s[j]=='R')
                 {
                   w=check(p,q+1,ch,n);
                   if(w==1)
                     {
                      c++;
                      q=q+1;
                     }
                   else
                      {
                        if(c!=0)
                          val.push_back(c);
                          break;
                      }
                 }
              else if(s[j]=='L')
                       {
                         w=check(p,q-1,ch,n);
                         if(w==1)
                           {
                             c++;
                             q=q-1;
                           }
                         else
                           {
                             if(c!=0)
                             val.push_back(c);
                             break;
                           }
                       }
               else if(s[j]=='U')
                      {
                         w=check(p-1,q,ch,n);
                         if(w==1)
                            {
                             c++;
                             p=p-1;
                            }
                          else
                            {
                              if(c!=0)
                              val.push_back(c);
                               break;
                            }
                      }
                else if(s[j]=='D')
                       {
                          w=check(p+1,q,ch,n);
                          if(w==1)
                            {
                              c++;
                              p=p+1;
                            }
                          else
                            {
                             if(c!=0)
                               val.push_back(c);
                               break;
                            }
                       }
             }
             if(j==l)
               val.push_back(l);
     }
}
 
int main() {
	int t,l,n,i,j;
	ll k;
	cin>>t;
	while(t--)
	 {
	   string s;
	   cin>>l>>n;
	   cin>>s;
	   k=0;
	   pr gf;
	   char **ch=new char*[n];
	    for(i=0;i<n;i++)
	        ch[i]=new char[n];
	   for(i=0;i<n;i++)
	     {
	      for(j=0;j<n;j++)
	         {
	           cin>>ch[i][j];
	           k++;
	          visit[i][j]=0;
	          if(ch[i][j]=='.')
	            {
	             gf.first=i;
	             gf.second=j;
	             z.push_back(gf);
	            }
	         }
	     }
	        rec(ch,n,s,l);
	        k=val[0];
	   for(i=1;i<val.size();i++)
	      {
	       k=k^val[i];   
	      }
	      cout<<k<<"\n";
	      val.clear();
	      z.clear();
	 }// your code goes here
	return 0;
}
